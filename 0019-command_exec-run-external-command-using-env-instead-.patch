From 80d025ae9675da60b32d5fe43dde9f35ebbc3081 Mon Sep 17 00:00:00 2001
From: Eli Schwartz <eschwartz@archlinux.org>
Date: Thu, 26 Mar 2020 13:48:27 -0400
Subject: [PATCH 19/20] command_exec: run external command using env instead of
 which

Instead of using the 'which' program to resolve a command to an on-disk
executable filename, use the 'env' program to run it. The former is
non-portable and may not be installed on all systems, while the latter
is guaranteed to be anywhere.

I believe the intention of this code was to ensure that when running
completely arbitrary third-party Exec= specifications, we do not
accidentally end up running a conflicting shell function definition.
Using 'env' fulfills this goal by entering a new environment context
with an unmodified environment (we do not make use of env's stated
purpose of creating a modified enviroment context) and then invoking the
command using exec(3) rather than a shell.
---
 scripts/xdg-open.in | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/scripts/xdg-open.in b/scripts/xdg-open.in
index 8de839a..9fc3ff8 100644
--- a/scripts/xdg-open.in
+++ b/scripts/xdg-open.in
@@ -281,7 +281,6 @@ search_desktop_file()
 
     if [ -r "$file" ] ; then
         command="$(get_key "${file}" "Exec" | first_word)"
-        command_exec=`which $command 2>/dev/null`
         icon="$(get_key "${file}" "Icon")"
         # FIXME: Actually LC_MESSAGES should be used as described in
         # http://standards.freedesktop.org/desktop-entry-spec/latest/ar01s04.html
@@ -321,7 +320,7 @@ search_desktop_file()
             args=$(( $args - 1 ))
         done
         [ $replaced -eq 1 ] || set -- "$@" "$target"
-        "$command_exec" "$@"
+        env "$command" "$@"
 
         if [ $? -eq 0 ]; then
             exit_success
-- 
2.38.1

